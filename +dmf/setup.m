function p = setup(p)
%  PLDAPS SETUP FILE
%  PACKAGE:  dmf
%  This setup file is for the delayed match to feature task.

%  Trial master function, will run at order NaN
p.trial.pldaps.trialFunction = 'dmf.trialFunction';

%  Set colors
defaultColors(p);
lplColors(p);

%  Default bit names
defaultBitNames(p);

%  Conditions

nblocks = 3;

%  Features:  shape (number of vertices), color, fill pattern
vertices = {3, 4, 5, 6, 7, 8};
colors = {'blue','orange','yellow','purple','green','scarlet'};
fills = {'solid','open,50','grating,10,0','grating,10,90','chevron,10,45,0','chevron,10,45,180'};
sym = CombVec(1:numel(vertices),1:numel(colors),1:numel(fills));
pairs = CombVec(1:size(sym,2),1:size(sym,2));
group1 = pairs(:,pairs(1,:)==pairs(2,:))';
group2 = Shuffle(pairs(:,pairs(1,:)~=pairs(2,:))');
n = size(group1,1);
m = size(group2,1);
list = zeros(nblocks*2*n,2);
block = zeros(nblocks*2*n,2);
for i=1:nblocks
    ix = 1+(i-1)*n : i*n;
    ix = mod(ix-1,m)+1;
     list(1+(i-1)*2*n : i*2*n,:) = Shuffle([group1 ; group2(ix,:)],2);
%    list(1+(i-1)*2*n : i*2*n,:) = Shuffle([group1 ; group1],2);
    block(1+(i-1)*2*n : i*2*n,:) = repmat([i nblocks],2*n,1);
end

%  Generate list of conditions
c = cell(size(list,1),1);
for i=1:numel(c)
    c{i}.vertices = [vertices{sym(1,list(i,1))} vertices{sym(1,list(i,2))}];
    c{i}.colors = [p.trial.display.colors.(colors{sym(2,list(i,1))}) ; p.trial.display.colors.(colors{sym(2,list(i,2))})];
    c{i}.fills = fills([sym(3,list(i,1)) sym(3,list(i,2))]);
    if(list(i,1)==list(i,2))
        c{i}.type = 'match';
    else
        c{i}.type = 'nonmatch';
    end
    c{i}.block = block(i,:);
end
p.conditions = c;
p.trial.pldaps.finish = numel(c);

%  Create eye position window manager
p.functionHandles.windowManagerObj.createGroup(...
    'groupName','eye',...
    'positionFunc',@() [p.trial.eyeX p.trial.eyeY],...
    'windowPtr',p.trial.display.overlayptr,...
    'displayAreaSize',[p.trial.display.pWidth p.trial.display.pHeight],...
    'displayAreaCenter',p.trial.display.ctr([1 2]),...
    'horizontalDataRange',[0 p.trial.display.pWidth],...
    'verticalDataRange',[0 p.trial.display.pHeight],...
    'dataOrigin',p.trial.display.ctr([1 2]),...
    'trajectoryColor',p.trial.display.clut.hWhite,...
    'maxTrajectorySamples',60,...
    'showTrajectoryTrace',true,...
    'showCurrentPosition',true,...
    'showDisplayAreaOutline',false,...
    'showDisplayAreaAxes',false,...
    'useInvertedVerticalAxis',false,...
    'currentColor',p.trial.display.clut.hGreen,...
    'windowColor',p.trial.display.clut.hCyan);

%  Add the fixation window
p.functionHandles.windowManagerObj.eye.add('fixation',[760 1160 340 740]);

%  Create analog stick window manager
p.functionHandles.windowManagerObj.createGroup(...
    'groupName','analogStick',...
    'positionFunc',@() [0 p.functionHandles.analogStickObj.position],...
    'windowPtr',p.trial.display.overlayptr,...
    'displayAreaSize',[20 200],...
    'displayAreaCenter',[100 905],...
    'horizontalDataRange',[-1 1],...
    'verticalDataRange',[0 5],...
    'dataOrigin',[0 2.5],...
    'trajectoryColor',p.trial.display.clut.hWhite,...
    'maxTrajectorySamples',60,...
    'currentColor',p.trial.display.clut.hGreen,...
    'borderColor',p.trial.display.clut.hBlue,...
    'windowColor',p.trial.display.clut.hCyan,...
    'showTrajectoryTrace',true,...
    'showCurrentPosition',true,...
    'showDisplayAreaOutline',true,...
    'showDisplayAreaAxes',true,...
    'useInvertedVerticalAxis',true);

%  Add neutral and engaged windows
p.functionHandles.windowManagerObj.analogStick.add('neutral',[-1 1 2 3]);
p.functionHandles.windowManagerObj.analogStick.add('engaged',[-1 1 0 0.5]);

%  Write windows to terminal
p.functionHandles.windowManagerObj.disp;

%  Create symbol object
p.functionHandles.symbolsObj = dmf.symbols(...
    'radius',175,...
    'ptr',p.trial.display.ptr,...
    'bgColor',p.trial.display.bgColor,...
    'center',p.trial.display.ctr(1:2));
