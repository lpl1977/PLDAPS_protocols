function p = set_setup(p)
%joystick_setup a PLDAPS experiment setup file for initial joystick
%testing and training.


%  Create the initial trial structure
p = pdsDefaultTrialStructure(p);

%  Put additional colors into the human and monkey CLUT
p.defaultParameters.display.humanCLUT(16:22,:) = ...
     [    0    0.4470    0.7410     %  Blue
    0.8500    0.3250    0.0980      %  Orange
    0.9290    0.6940    0.1250      %  Yellow
    0.4940    0.1840    0.5560      %  Purple
    0.4660    0.6740    0.1880      %  Green
    0.3010    0.7450    0.9330      %  Cyan
    0.6350    0.0780    0.1840];    %  Scarlet
p.defaultParameters.display.monkeyCLUT(16:22,:) = p.defaultParameters.display.humanCLUT(16:22,:);

%  Set up blend from background to scarlet in positions 23 to 123.
w1 = linspace(0,1,100)';
w2 = 1-w1;
w1 = repmat(w1,1,3);
w2 = repmat(w2,1,3);

p.defaultParameters.display.humanCLUT(23:123,:) = repmat([repmat([0.5 0.5 0.5],100,1).*w2;


%  For the sake of convenience define some references to the colors
p.defaultParameters.display.clut.hWhite = 5*[1 1 1]';
p.defaultParameters.display.clut.bWhite = 7*[1 1 1]';
p.defaultParameters.display.clut.hCyan = 8*[1 1 1]';
p.defaultParameters.display.clut.bBlack = 9*[1 1 1]';
p.defaultParameters.display.clut.hGreen = 12*[1 1 1]';
p.defaultParameters.display.clut.hRed = 13*[1 1 1]';
p.defaultParameters.display.clut.hBlack =14*[1 1 1]';

p.defaultParameters.display.clut.B = 15*[1 1 1]';
p.defaultParameters.display.clut.O = 16*[1 1 1]';
p.defaultParameters.display.clut.Y = 17*[1 1 1]';
p.defaultParameters.display.clut.P = 18*[1 1 1]';
p.defaultParameters.display.clut.G = 19*[1 1 1]';
p.defaultParameters.display.clut.C = 20*[1 1 1]';
p.defaultParameters.display.clut.S = 21*[1 1 1]';



%  Setup default trial values in p.trial
%p = joystick_trainer.joystick_defaultTrialVariables(p);

%  Set trial master function
p.defaultParameters.pldaps.trialFunction = 'set_trainer.set_trainer';

p.trial.sound.useForReward = 0;

%
%  State control
%

%  Trial
p.trial.stimulus.trial_state = NaN;

%  Joystick
p.trial.stimulus.joystick.state = NaN;

%  Error type
p.trial.stimulus.error_code = NaN;

%
%  Reward sounds
%
p.trial.behavior.fail_to_release.sound.file = 'breakfix';
p.trial.behavior.early_release.sound.file = 'incorrect';
p.trial.behavior.fail_to_engage.sound.file = 'incorrect';
p.trial.behavior.reward.sound.file = 'reward';

%  Trial duration information
p.trial.pldaps.maxTrialLength = 1000;
p.trial.pldaps.maxFrames = p.trial.pldaps.maxTrialLength*p.trial.display.frate;

p.trial.stimulus.error_code = 0;

p.trial.stimulus.exit_flag = 0;


%
%  FEATURES
%

%  Fixation dot

%  Baited
p.trial.stimulus.features.baited.cue_width = 100;
p.trial.stimulus.features.baited.cue_duty_cycle = 0.5;
p.trial.stimulus.features.baited.cue_period = 1;
p.trial.stimulus.features.baited.cue_linewidth = 8;
p.trial.stimulus.features.baited.cue_color = p.defaultParameters.display.clut.bWhite;

%  Engaged
p.trial.stimulus.features.engaged = p.trial.stimulus.features.baited;
%p.trial.stimulus.features.engaged.cue_color = 0.5*[1 1 1];

%  Release
p.trial.stimulus.features.release = p.trial.stimulus.features.baited;
p.trial.stimulus.features.release.cue_color = [p.defaultParameters.display.clut.bBlack; 0.25];

%  Reward
p.trial.stimulus.features.reward = p.trial.stimulus.features.release;


%  Set up condition array
%  Only one condition--push the joystick
c = cell(1);
c{1}.Nr=1;
p.conditions=repmat(c,1,1000);

%  Maximum number of trials
p.trial.pldaps.finish = 1000;
